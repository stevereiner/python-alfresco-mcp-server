[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "python-alfresco-mcp-server"
version = "1.0.0"
description = "FastMCP 2.0 server for Alfresco Content Services integration"
authors = [{name = "Your Name", email = "your.email@example.com"}]
license = {text = "Apache-2.0"}
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    # FastMCP 2.0 - Modern MCP framework with enhanced features
    "fastmcp>=2.9.0",
    
    # Alfresco integration
    "python-alfresco-api>=1.0.0",
    
    # Configuration and utilities
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "PyYAML>=6.0",
    
    # HTTP client
    "httpx>=0.24.0",
    
    # File handling
    "python-multipart>=0.0.6",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-mock>=3.10.0",
    "coverage[toml]>=7.0.0",
    "httpx>=0.24.0",
]
all = [
    "python-alfresco-mcp-server[dev]",
    "python-alfresco-mcp-server[test]",
]

[project.scripts]
python-alfresco-mcp-server = "alfresco_mcp_server.fastmcp_server:main"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
markers = [
    "asyncio: marks tests as async",
    "integration: marks tests as integration tests requiring live Alfresco server",
    "unit: marks tests as unit tests",
    "fastmcp: marks tests as FastMCP 2.0 specific tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["alfresco_mcp_server"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B018", "B019"]

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
